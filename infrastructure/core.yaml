AWSTemplateFormatVersion: "2010-09-09"
Description: CloudFormation template to create an S3 bucket with public access, static web hosting, and a specific bucket policy.

Parameters:
  BucketName:
    Description: Name of the S3 bucket
    Type: String

  Region:
    Description: AWS Region for the S3 bucket
    Type: String
    AllowedValues:
      - us-east-1
      - us-west-1
      - us-west-2
      - eu-west-1
      - eu-central-1
      - ap-southeast-1
      - ap-southeast-2
      - ap-northeast-1
      - ap-northeast-2
      - sa-east-1
      - ca-central-1
      - cn-north-1
      - cn-northwest-1
      - eu-west-2
      - eu-west-3
      - eu-north-1
      - ap-south-1
      - me-south-1
      - af-south-1
    Default: us-east-1

  UserPoolName:
    Type: String
    Description: Name of the Cognito User Pool

  UserPoolDomain:
    Type: String
    Description: Domain of the Cognito User Pool

  AppClientName:
    Type: String
    Description: Name of the Cognito App Client

  CloudFrontCachePolicyId:
    Type: String
    Description: ID of cache policy (currently use managed policy)

Resources:
  S3Bucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !Ref BucketName
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html

  BucketPolicy:
    Type: "AWS::S3::BucketPolicy"
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal: "*"
            Action: "s3:GetObject"
            Resource:
              - !Sub "arn:aws:s3:::${BucketName}/*"

  CognitoUserPool:
    Type: "AWS::Cognito::UserPool"
    Properties:
      UserPoolName: !Ref UserPoolName
      MfaConfiguration: "OFF"
      UsernameAttributes:
        - "email"
      AutoVerifiedAttributes:
        - "email"

  CognitoUserPoolDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      Domain: !Ref UserPoolDomain
      UserPoolId: !Ref CognitoUserPool

  CognitoUserPoolClient:
    Type: "AWS::Cognito::UserPoolClient"
    Properties:
      ClientName: !Ref AppClientName
      UserPoolId: !Ref CognitoUserPool
      GenerateSecret: false
      AllowedOAuthFlows:
        - code
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthScopes:
        - email
        - openid
        - phone
      CallbackURLs:
        - !Sub
          - "https://${Domain}"
          - Domain: !GetAtt CloudFrontDistribution.DomainName
        - "http://localhost:5173"
      LogoutURLs:
        - !Sub
          - "https://${Domain}"
          - Domain: !GetAtt CloudFrontDistribution.DomainName
        - "http://localhost:5173"
      SupportedIdentityProviders:
        - COGNITO

  CloudFrontDistribution:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:
        Origins:
          - DomainName: !Select [2, !Split ["/", !GetAtt S3Bucket.WebsiteURL]]
            Id: !Ref S3Bucket
            CustomOriginConfig:
              HTTPPort: 80
              OriginProtocolPolicy: http-only
        DefaultCacheBehavior:
          TargetOriginId: !Ref S3Bucket
          CachePolicyId: !Ref CloudFrontCachePolicyId
          ViewerProtocolPolicy: https-only
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
            - PUT
            - POST
            - PATCH
            - DELETE
          CachedMethods:
            - GET
            - HEAD
            - OPTIONS
        PriceClass: PriceClass_100
        Enabled: true

Outputs:
  BucketName:
    Description: Name of the S3 bucket
    Value: !Ref S3Bucket

  BucketWebsiteURL:
    Description: URL of the S3 bucket website
    Value: !GetAtt S3Bucket.WebsiteURL

  UserPoolId:
    Description: The ID of the Cognito User Pool
    Value: !Ref CognitoUserPool

  UserPoolClientId:
    Description: The ID of the Cognito User Pool App Client
    Value: !Ref CognitoUserPoolClient

  CloudFrontDistributionId:
    Description: ID of the CloudFront distribution
    Value: !Ref CloudFrontDistribution

  CloudFrontDistributionDomainName:
    Description: Domain name of the CloudFront distribution
    Value: !GetAtt CloudFrontDistribution.DomainName
