AWSTemplateFormatVersion: 2010-09-09
Description: CloudFormation template to create an S3 bucket with specific CORS
  configuration and block all public access.

Globals:
  Function:
    MemorySize: 128
    Handler: handler.handler
    Runtime: python3.11
    Timeout: 30

Resources:
  ContentStorageBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: tiktok-clone-storage
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - '*'
            AllowedMethods:
              - GET
              - PUT
              - POST
              - DELETE
              - HEAD
            AllowedOrigins:
              - http://localhost:5173
            MaxAge: 3000
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        RestrictPublicBuckets: true
      NotificationConfiguration:
        EventBridgeConfiguration:
          EventBridgeEnabled: true

  SageMakerBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: tiktok-clone-sagemaker

  CallContentAnalysis:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: s3-call-content-analysis-endpoint
      CodeUri:
        Bucket: tiktok-clone-infra
        Key: s3/src/CallContentAnalysis/handler.zip
      Tracing: Active
      Events:
        ContentStorageBucket:
          Type: S3
          Properties:
            Bucket: !Ref ContentStorageBucket
            Events:
              - s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: suffix
                    Value: .mp4
      Environment:
        Variables:
          CONTENTANALYSIS_QUEUE_NAME: !GetAtt ContentAnalysisQueue.QueueName
          CONTENTANALYSIS_QUEUE_ARN: !GetAtt ContentAnalysisQueue.Arn
          CONTENTANALYSIS_QUEUE_URL: !Ref ContentAnalysisQueue
      Policies:
        - SQSSendMessagePolicy:
            QueueName: !GetAtt ContentAnalysisQueue.QueueName

  CallContentAnalysisLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Retain
    Properties:
      LogGroupName: !Sub /aws/lambda/${CallContentAnalysis}

  ContentAnalysisQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: content-analysis
      VisibilityTimeout: 180

  ContentAnalysis:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: content-analysis
      CodeUri:
        Bucket: tiktok-clone-infra
        Key: s3/src/ContentAnalysis/handler.zip
      Tracing: Active
      Events:
        ContentAnalysisQueue:
          Type: SQS
          Properties:
            Queue: !GetAtt ContentAnalysisQueue.Arn
            BatchSize: 1
      Environment:
        Variables:
          SAGEMAKER_BUCKET_NAME: !Ref SageMakerBucket
          SAGEMAKER_BUCKET_ARN: !GetAtt SageMakerBucket.Arn
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - s3:GetObject
                - s3:PutObject
              Resource:
                - !Sub arn:${AWS::Partition}:s3:::${SageMakerBucket}
                - !Sub arn:${AWS::Partition}:s3:::${SageMakerBucket}/*

  ContentAnalysisLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Retain
    Properties:
      LogGroupName: !Sub /aws/lambda/${ContentAnalysis}

Outputs:
  BucketName:
    Description: The name of S3 bucket for content storage
    Value: !Ref ContentStorageBucket
    Export:
      Name: content-storage-bucket

  QueueURL:
    Description: URL of Content Analysis Queue
    Value: !Ref ContentAnalysisQueue
    Export:
      Name: content-analysis-queue-url

  QueueARN:
    Description: ARN of Content Analysis Queue
    Value: !GetAtt ContentAnalysisQueue.Arn
    Export:
      Name: content-analysis-queue-arn

  QueueName:
    Description: Name of Content Analysis Queue
    Value: !GetAtt ContentAnalysisQueue.QueueName
    Export:
      Name: content-analysis-queue-name

Transform: AWS::Serverless-2016-10-31