AWSTemplateFormatVersion: "2010-09-09"
Description: Sample AWS Lambda function which interact with Neptune
Transform: AWS::Serverless-2016-10-31

Resources:
  ApiGatewayRestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: apis

  ApiGatewayAuthorizer:
    Type: AWS::ApiGateway::Authorizer
    Properties:
      Name: cognito
      RestApiId: !Ref ApiGatewayRestApi
      Type: COGNITO_USER_POOLS
      IdentitySource: method.request.header.Authorization
      ProviderARNs:
        - !ImportValue userpool-arn

  ApiGatewayMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId: !GetAtt ApiGatewayRestApi.RootResourceId
      RestApiId: !Ref ApiGatewayRestApi
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId: !Ref ApiGatewayAuthorizer
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Join
          - ""
          - - "arn:aws:apigateway:"
            - !Ref AWS::Region
            - ":lambda:path/2015-03-31/functions/"
            - !GetAtt Function.Arn
            - /invocations

  LambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt Function.Arn
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Join
        - ""
        - - "arn:aws:execute-api:"
          - !Ref AWS::Region
          - ":"
          - !Ref AWS::AccountId
          - ":"
          - !Ref ApiGatewayRestApi
          - /*

  Function:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: create-user
      Runtime: python3.11
      Handler: lambda_function.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Environment:
        Variables:
          NEPTUNE_WRITE_ENDPOINT: !ImportValue neptune-write
          NEPTUNE_PORT: 8182
      VpcConfig:
        SecurityGroupIds:
          - !ImportValue neptune-lambda-security-group
        SubnetIds: !Split
          - ","
          - !ImportValue private-subnet-ids
      Layers:
        - !GetAtt FunctionLayer.LayerVersionArn
      Code:
        S3Bucket: tiktok-clone-infra
        S3Key: apis/src/CreateUser/function.zip

  FunctionLayer:
    Type: AWS::Lambda::LayerVersion
    Properties:
      CompatibleArchitectures:
        - x86_64
      CompatibleRuntimes:
        - python3.11
      Content:
        S3Bucket: tiktok-clone-infra
        S3Key: apis/src/layer.zip
      LayerName: neptune-dependencies

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole

  FunctionLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Retain
    Properties:
      LogGroupName: !Sub /aws/lambda/${Function}
